<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>